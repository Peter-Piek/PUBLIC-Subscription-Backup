{
  "properties": {
    "category": "Microsoft Sentinel Parser",
    "displayName": "Parser for CrowdStrikeFalconEventStream",
    "version": 2,
    "functionAlias": "CrowdStrikeFalconEventStream",
    "query": "CommonSecurityLog\n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\"\n| extend DeviceCustomNumber1 = coalesce(column_ifexists(\"FieldDeviceCustomNumber1\", long(null)),DeviceCustomNumber1),\n         DeviceCustomNumber2 = coalesce(column_ifexists(\"FieldDeviceCustomNumber2\", long(null)),DeviceCustomNumber2),\n         DeviceCustomNumber3 = coalesce(column_ifexists(\"FieldDeviceCustomNumber3\", long(null)),DeviceCustomNumber3)\n// Additional Extensions\n| extend EventType = extract(@\"cat=([^;]+)(\\;|$)\",1,AdditionalExtensions),\n         Outcome = extract(@\"outcome=([^;]+)(\\;|$)\",1,AdditionalExtensions),\n         Technique = extract(@\"reason=([^;]+)(\\;|$)\",1,AdditionalExtensions),\n         PatternDisposition = extract(@\"CSMTRPatternDisposition=([^;]+)(\\;|$)\",1,AdditionalExtensions),\n         SessionStartTime = unixtime_seconds_todatetime(toint(extract(@\"sessionStartTimestamp=([^;]+)(\\;|$)\",1,AdditionalExtensions))),\n         SessionEndTime = unixtime_seconds_todatetime(toint(extract(@\"sessionEndTimestamp=([^;]+)(\\;|$)\",1,AdditionalExtensions)))\n| extend EventType = coalesce(column_ifexists(\"DeviceEventCategory\",\"\"),EventType), \n         Outcome = coalesce(column_ifexists(\"EventOutcome\",\"\"),Outcome),\n\t\t Technique = coalesce(column_ifexists(\"Reason\",\"\"),Technique)\n// Device Custom Number Values\n| extend ParentProcessId = iif(DeviceCustomNumber1Label == \"ParentProcessId\" , DeviceCustomNumber1, toint(\"\")),\n         ChildProcessId = iif(DeviceCustomNumber2Label == \"ProcessId\" , DeviceCustomNumber2, toint(\"\")),\n         Offset = iif(DeviceCustomNumber3Label == \"Offset\", DeviceCustomNumber3, toint(\"\"))\n| project-away DeviceCustomNumber1Label, DeviceCustomNumber1,DeviceCustomNumber2Label, DeviceCustomNumber2,DeviceCustomNumber3Label, DeviceCustomNumber3\n// Device Custom Date Values\n| extend EventTimestamp = iif(DeviceCustomDate1Label == \"Timestamp\", todatetime(DeviceCustomDate1), todatetime(\"\")),\n         ExeWrittenTime = iif(DeviceCustomDate1Label == \"ExeWrittenTimestamp\", todatetime(DeviceCustomDate1), todatetime(\"\")),\n         DnsRequestTime = iif(DeviceCustomDate1Label == \"DNS Request Time\", todatetime(DeviceCustomDate1), todatetime(\"\")),\n         NetworkAccessTime = iif(DeviceCustomDate1Label == \"Network Access Timestamp\", todatetime(DeviceCustomDate1), todatetime(\"\")),\n         DocAccessTime = iif(DeviceCustomDate1Label == \"DocAccessTimestamp\" or DeviceCustomDate1Label == \"Document Accessed Timestamp\", todatetime(DeviceCustomDate1), todatetime(\"\")),\n         HashSpreadingEventTime = iif(DeviceCustomDate2Label == \"HashSpreadingEventTime\", todatetime(DeviceCustomDate2), todatetime(\"\")),\n         HashSpreadingSensorTime = iif(DeviceCustomDate2Label == \"HashSpreadingSensorEventTime\", todatetime(DeviceCustomDate2), todatetime(\"\"))\n| project-away DeviceCustomDate1Label, DeviceCustomDate1, DeviceCustomDate2Label, DeviceCustomDate2\n// Device Custom String Values\n| extend ScanResultName = iif(DeviceCustomString1Label == \"ScanResultNam\", DeviceCustomString1, \"\"),\n         WrittenExeFileName = iif(DeviceCustomString2Label == \"WrittenExeFileName\", DeviceCustomString2, \"\"),\n         QuarantineFileSHA256 = iif(DeviceCustomString2Label == \"QuarantineFileSHA256\", DeviceCustomString2, \"\"),\n         ScanResultEngine = iif(DeviceCustomString2Label == \"ScanResultEngine\", DeviceCustomString2, \"\"),\n         AccessedDocFileName = iif(DeviceCustomString2Label == \"AccessedDocFileName\", DeviceCustomString2, \"\"),\n         WrittenExeFilePath = iif(DeviceCustomString3Label == \"WrittenExeFilePath\", DeviceCustomString3, \"\"),\n         AccessedDocFilePath = iif(DeviceCustomString3Label == \"AccessedDocFilePath\", DeviceCustomString3, \"\"),\n         QuarantineFilePath = iif(DeviceCustomString3Label == \"QuarantineFilePath\", DeviceCustomString3, \"\"),\n         ScanResultVersion = iif(DeviceCustomString4Label == \"ScanResultVersion\", DeviceCustomString4, \"\"),\n         CommandLine = iif(DeviceCustomString5Label == \"CommandLine\", DeviceCustomString5, \"\"),\n         FalconHostLink = iif(DeviceCustomString6Label == \"FalconHostLink\", DeviceCustomString6, \"\")\n| project-away DeviceCustomString1Label, DeviceCustomString1, DeviceCustomString2Label, DeviceCustomString2, DeviceCustomString3Label, DeviceCustomString3, DeviceCustomString4Label, DeviceCustomString4, DeviceCustomString5Label, DeviceCustomString5, DeviceCustomString6Label, DeviceCustomString6\n// Data Field Normalization\n| project-rename DstHostName = DestinationHostName,\n         DstNtDomain = DestinationNTDomain,\n         DstUserName = DestinationUserName,\n         DstIpAddr = DestinationTranslatedAddress,\n         SrcMacAddr = SourceMACAddress,\n         SrcIpAddr = SourceIP\n| extend EventType = iif(DeviceEventClassID == \"DetectionSummaryEvent\" or DeviceEventClassID contains \"Detection Summary Event\", \"DetectionSummaryEvent\", EventType), \n         ReceiptTime = unixtime_milliseconds_todatetime(tolong(ReceiptTime)),\n         SensorId = extract(@\"/detail/([^/]+)\\/\",1,FalconHostLink),\n         Severity = case(LogSeverity == 1, \"Informational\",\n                         LogSeverity == 2, \"Low\",\n                         LogSeverity == 3, \"Medium\",\n                         LogSeverity == 4, \"High\",\n                         LogSeverity == 5, \"Critical\",\n                         LogSeverity)\n",
    "tags": [
      {
        "name": "description",
        "value": ""
      }
    ]
  },
  "id": "/subscriptions/d7425a42-e8c6-4a20-8d02-c2d534dc8a85/resourceGroups/rg-buisecops-cybermxdr-westeu/providers/Microsoft.OperationalInsights/workspaces/log-buisecops-cybermxdr-westeu/savedSearches/crowdstrikefalconeventstream data parser",
  "name": "crowdstrikefalconeventstream data parser",
  "type": "Microsoft.OperationalInsights/savedSearches"
}
